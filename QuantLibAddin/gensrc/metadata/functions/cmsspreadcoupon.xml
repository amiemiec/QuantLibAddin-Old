<Category name='cmsspreadcoupon'>
  <description>Functions to construct and use Cms Spread Leg objects.</description>
  <displayName>CmsSpread Coupon Vectors</displayName>
  <xlFunctionWizardCategory>QuantLib - Financial</xlFunctionWizardCategory>
  <serializationIncludes>
	<include>qlo/cmsspreadcoupon.hpp</include>
    <include>qlo/schedule.hpp</include>
    <include>qlo/conundrumpricer.hpp</include>
    <include>qlo/termstructures.hpp</include>
    <include>qlo/indexes/swapindex.hpp</include>

	<include>ql/indexes/swapindex.hpp</include>
	<include>ql/experimental/coupons/swapspreadindex.hpp</include>	  
  </serializationIncludes>
  <addinIncludes>
	<include>qlo/cmsspreadcoupon.hpp</include>
    <include>qlo/schedule.hpp</include>
    <include>qlo/conundrumpricer.hpp</include>
    <include>qlo/termstructures.hpp</include>
    <include>qlo/indexes/swapindex.hpp</include>

	<include>ql/indexes/swapindex.hpp</include>
	<include>ql/experimental/coupons/swapspreadindex.hpp</include>
  </addinIncludes>
  <copyright>
    Copyright (C) 2006, 2007, 2009 Ferdinando Ametrano
    Copyright (C) 2006, 2007 Cristina Duminuco
    Copyright (C) 2006, 2007 Giorgio Facchinetti
    Copyright (C) 2005 Aurelien Chanudet
  </copyright>

	<Functions>

	<Constructor name='qlSwapSpreadIndex'>
		<libraryFunction>SwapSpreadIndex</libraryFunction>
		<SupportedPlatforms>
			<!--SupportedPlatform name='Excel' calcInWizard='false'/-->
			<SupportedPlatform name='Excel'/>
			<SupportedPlatform name='Calc'/>
			<SupportedPlatform name='Cpp'/>
		</SupportedPlatforms>
		<processorName>IndexProcessor</processorName>
		<ParameterList>
			<Parameters>
				<Parameter name='FamilyName' exampleValue='EuriborSwapIsdaFixA10Y'>
					<type>string</type>
					<tensorRank>scalar</tensorRank>
					<description>index name.</description>
				</Parameter>
				<Parameter name='SwapIndex1' exampleValue=''>
					<type>QuantLib::SwapIndex</type>
					<tensorRank>scalar</tensorRank>
					<description>first swap index object ID.</description>
				</Parameter>
				<Parameter name='SwapIndex2' exampleValue=''>
					<type>QuantLib::SwapIndex</type>
					<tensorRank>scalar</tensorRank>
					<description>second swap index object ID.</description>
				</Parameter>
				<Parameter name='Gearing1' exampleValue='1.0'>
					<type>QuantLib::Real</type>
					<tensorRank>scalar</tensorRank>
					<description>first gearing.</description>
				</Parameter>
				<Parameter name='Gearing2' exampleValue='1.0'>
					<type>QuantLib::Real</type>
					<tensorRank>scalar</tensorRank>
					<description>second gearing.</description>
				</Parameter>
			</Parameters>
		</ParameterList>
	</Constructor>

		
		
		
		
    <Constructor name='qlCmsSpreadLeg'>
		<libraryFunction>CmsSpreadLeg</libraryFunction>
		<SupportedPlatforms>
			<!--SupportedPlatform name='Excel' calcInWizard='false'/-->
			<SupportedPlatform name='Excel'/>
			<SupportedPlatform name='Cpp'/>
			<SupportedPlatform name='Calc'/>
		</SupportedPlatforms>
		<processorName>LegProcessor</processorName>
		<ParameterList>
			<Parameters>
				<Parameter name='PaymentBDC' default='"Following"'>
					<type>QuantLib::BusinessDayConvention</type>
					<tensorRank>scalar</tensorRank>
					<description>payment business day convention.</description>
				</Parameter>
				<Parameter name='Nominals' exampleValue='1000000'>
					<type>double</type>
					<tensorRank>vector</tensorRank>
					<description>Nominal amount vector.</description>
				</Parameter>
				<Parameter name='ScheduleID'>
					<type>QuantLib::Schedule</type>
					<superType>libraryClass</superType>
					<tensorRank>scalar</tensorRank>
					<description>Schedule object ID.</description>
				</Parameter>
				<Parameter name='FixingDays' default='std::vector&lt;QuantLib::Natural&gt;()'>
					<type>QuantLib::Natural</type>
					<tensorRank>vector</tensorRank>
					<description>fixing days (e.g. 2).</description>
				</Parameter>
				<Parameter name='IsInArrears' default='false'>
					<type>bool</type>
					<tensorRank>scalar</tensorRank>
					<description>TRUE if the fixing is in arrears.</description>
				</Parameter>
				<Parameter name='DayCounter' exampleValue='Actual/Actual (ISMA)'>
					<type>QuantLib::DayCounter</type>
					<tensorRank>scalar</tensorRank>
					<description>Payment DayCounter ID.</description>
				</Parameter>
				<Parameter name='Floors' default='std::vector&lt;QuantLib::Rate&gt;()'>
					<type>QuantLib::Rate</type>
					<tensorRank>vector</tensorRank>
					<description>floor strikes.</description>
				</Parameter>
				<Parameter name='Gearings' default='1.0'>
					<type>double</type>
					<tensorRank>vector</tensorRank>
					<description>floating rate gearings.</description>
				</Parameter>
				<Parameter name='SwapSpreadIndex'>
					<type>QuantLib::SwapSpreadIndex</type>
					<tensorRank>scalar</tensorRank>
					<description>underlying SwapIndex object ID.</description>
				</Parameter>
				<Parameter name='Spreads' default='0.0'>
					<type>QuantLib::Spread</type>
					<tensorRank>vector</tensorRank>
					<description>floating rate spreads.</description>
				</Parameter>
				<Parameter name='Caps' default='std::vector&lt;QuantLib::Rate&gt;()'>
					<type>QuantLib::Rate</type>
					<tensorRank>vector</tensorRank>
					<description>cap strikes.</description>
				</Parameter>
			</Parameters>
		</ParameterList>
	</Constructor>





		<!--pricers -->
	  <Constructor name='qlLogNormalCmsSpreadPricer'>
		<libraryFunction>LogNormalCmsSpreadPricer</libraryFunction>
		<SupportedPlatforms>
			<SupportedPlatform name='Excel'/>
			<SupportedPlatform name='Cpp'/>
			<SupportedPlatform name='Calc'/>
		</SupportedPlatforms>
		<ParameterList>
			<Parameters>
				<Parameter name='CmsCouponPricer'>
					<type>QuantLib::CmsCouponPricer</type>
					<tensorRank>scalar</tensorRank>
					<description>CMS coupon pricer object ID.</description>
				</Parameter>
				<Parameter name='Correlation'>
					<type>QuantLib::Quote</type>
					<superType>libToHandle</superType>
					<tensorRank>scalar</tensorRank>
					<description>CMS Spread Correlation.</description>
				</Parameter>
				<Parameter name='DiscountingYieldCurve' default='""'>
					<type>QuantLib::YieldTermStructure</type>
					<superType>libToHandle</superType>
					<tensorRank>scalar</tensorRank>
					<description>discounting yield term structure object ID.</description>
				</Parameter>
				<Parameter name='IntegrationPoints' default='16'>
					<type>QuantLib::Size</type>
					<tensorRank>scalar</tensorRank>
					<description>Number of integration points.</description>
				</Parameter>
				<Parameter name='VolatilityType' default='"ShiftedLognormal"'>
                    <type>QuantLib::VolatilityType</type>
				    <tensorRank>scalar</tensorRank>
				    <description>Type of the volatility model ('ShiftedLognormal','Normal').</description>
				</Parameter>
				<Parameter name='Shift1' default='0.0'>
					<type>QuantLib::Real</type>
					<tensorRank>scalar</tensorRank>
					<description>first shift.</description>
				</Parameter>
				<Parameter name='Shift2' default='0.0'>
					<type>QuantLib::Real</type>
					<tensorRank>scalar</tensorRank>
					<description>second shift.</description>
				</Parameter>
			</Parameters>
		</ParameterList>
	</Constructor>


  </Functions>

</Category>
